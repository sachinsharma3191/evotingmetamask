{"ast":null,"code":"import React, { Component } from \"react\";\nimport renderHTML from 'react-render-html';\nimport { Link, Redirect } from 'react-router-dom';\nimport './RegisterInfo.css';\nimport RegisterStorage from \"./stores/RegisterStorage\";\nimport swal from \"sweetalert2\";\nimport web3 from './web3';\nimport ModalToInstallMeta from \"./Modal\";\nimport { Button, Modal } from 'react-bootstrap';\n\nconst notifier = require('node-notifier');\n\nclass RegisterInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.state.show = false;\n    };\n\n    this.handleShow = () => {\n      this.state.show = true;\n    };\n\n    this.state = {\n      password: '',\n      fname: '',\n      lname: '',\n      dob: '',\n      gender: '',\n      email: '',\n      username: '',\n      metaMaskInstalled: '',\n      show: true,\n      showModal: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  componentDidMount() {}\n\n  showtext() {\n    var date = document.getElementById(\"email\");\n    console.log(date.innerHTML);\n    date.type = \"date\";\n\n    if (date.textContent == \"\") {\n      console.log(date);\n      date.type = \"text\";\n    } else date.type = \"date\";\n  }\n\n  showModal() {\n    console.log(' in modal'); // this.setState({\n    //     showModal: true\n    // })\n\n    this.state.showModal = true;\n  }\n\n  handleClose() {\n    this.state.showModal = false;\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 15) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  pwstrength() {\n    var password = document.getElementById(\"password\").value;\n    document.getElementById(\"pwmsg\").style.visibility = \"visible\";\n    var bar = document.getElementById(\"strength\");\n    var val = bar.value;\n    bar.style.visibility = \"visible\";\n    console.log(password.length);\n    bar.low = \"0.45\";\n    bar.high = \"0.75\";\n    bar.optimum = \"0.8\";\n\n    if (password.length < 6) {\n      bar.value = \"0.3\";\n      bar.background = \"red\";\n    } else if (password.length < 9) bar.value = \"0.55\";else bar.value = \"0.8\";\n  }\n\n  async doRegisterPost() {\n    if (!this.state.password) return;\n\n    try {\n      let res = await fetch('http://localhost:3002/registerpost', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: this.state.password,\n          username: this.state.username,\n          fname: this.state.fname,\n          lname: this.state.lname,\n          dob: this.state.dob,\n          gender: this.state.gender,\n          email: this.state.email\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        console.log(\"\");\n        swal.fire({\n          icon: 'success',\n          title: \"Verification Email Sent!\",\n          text: \"Enter the OTP to verify your Email\",\n          type: \"Success\",\n          confirmButtonText: \"OK\"\n        });\n        console.log(\"success\");\n        RegisterStorage.email = this.state.email;\n        RegisterStorage.username = this.state.username;\n        this.props.history.push(\"/verifyemail\");\n      } else if (result && result.success === false) {\n        console.log(\"registration failed \");\n        swal.fire({\n          icon: 'error',\n          title: 'Registration failed',\n          text: 'Try Again',\n          confirmButtonText: \"OK\"\n        });\n        this.props.history.push(\"/RegisterInfo\");\n      }\n    } catch (e) {}\n  }\n\n  render() {\n    if (typeof web3 === 'undefined') {\n      console.log(\"Metamask installed..\");\n    }\n\n    if (typeof web3 !== 'undefined') {\n      console.log(\"Metamask is not installed..\");\n      swal.fire({\n        icon: 'success',\n        title: \"Verification Email Sent!\",\n        text: \"Enter the OTP to verify your Email\",\n        type: \"Success\",\n        confirmButtonText: \"OK\"\n      });\n    }\n  }\n\n}\n\nexport default RegisterInfo;","map":{"version":3,"sources":["/Users/vrushalij/Desktop/Blockchain/HarshUpdated/evoting-react/Frontend/src/RegisterInfo.js"],"names":["React","Component","renderHTML","Link","Redirect","RegisterStorage","swal","web3","ModalToInstallMeta","Button","Modal","notifier","require","RegisterInfo","constructor","props","handleClose","state","show","handleShow","password","fname","lname","dob","gender","email","username","metaMaskInstalled","showModal","onChange","bind","componentDidMount","showtext","date","document","getElementById","console","log","innerHTML","type","textContent","e","setState","target","name","value","setInputValue","property","val","trim","length","pwstrength","style","visibility","bar","low","high","optimum","background","doRegisterPost","res","fetch","method","headers","body","JSON","stringify","result","json","success","fire","icon","title","text","confirmButtonText","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport renderHTML from 'react-render-html';\nimport { Link, Redirect } from 'react-router-dom';\nimport './RegisterInfo.css';\nimport RegisterStorage from \"./stores/RegisterStorage\";\nimport swal from \"sweetalert2\";\nimport web3 from './web3';\nimport ModalToInstallMeta from \"./Modal\";\nimport { Button, Modal } from 'react-bootstrap';\n\nconst notifier = require('node-notifier');\n\nclass RegisterInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: '',\n            fname: '',\n            lname: '',\n            dob: '',\n            gender: '',\n            email: '',\n            username:'',\n            metaMaskInstalled: '',\n            show: true,\n            showModal: false\n        };\n        this.onChange = this.onChange.bind(this);\n        this.showModal = this.showModal.bind(this);\n    }\n\n    componentDidMount(){\n        \n    }\n    handleClose = () => {\n        this.state.show = false;\n    }\n    handleShow = () => {\n        this.state.show = true;\n    }\n    showtext() {\n        var date = document.getElementById(\"email\");\n        console.log(date.innerHTML);\n        date.type = \"date\";\n        if (date.textContent == \"\") {\n            console.log(date);\n            date.type = \"text\";\n        }\n        else date.type = \"date\";\n    }\n\n    showModal() {\n        console.log(' in modal')\n        // this.setState({\n        //     showModal: true\n        // })\n        this.state.showModal = true;\n    }\n\n    handleClose() {\n        this.state.showModal = false;\n    }\n  \n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n      }\n\n    setInputValue(property, val) {\n        val = val.trim();\n        if (val.length > 15) {\n            return;\n        }\n        this.setState({\n            [property]: val\n        })\n    }\n\n    pwstrength() {\n        var password = document.getElementById(\"password\").value;\n        document.getElementById(\"pwmsg\").style.visibility = \"visible\";\n        var bar = document.getElementById(\"strength\");\n        var val = bar.value;\n        bar.style.visibility = \"visible\";\n        console.log(password.length);\n        bar.low = \"0.45\";\n        bar.high = \"0.75\";\n        bar.optimum = \"0.8\";\n        if (password.length < 6) {\n            bar.value = \"0.3\";\n            bar.background = \"red\";\n        }\n        else if (password.length < 9) bar.value = \"0.55\";\n        else bar.value = \"0.8\";\n    }\n\n    async doRegisterPost() {\n        if (!this.state.password)\n            return;\n\n        try {\n            let res = await fetch('http://localhost:3002/registerpost', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    password: this.state.password,\n                    username:this.state.username,\n                    fname: this.state.fname,\n                    lname: this.state.lname,\n                    dob: this.state.dob,\n                    gender: this.state.gender,\n                    email: this.state.email\n                })\n            });\n            let result = await res.json();\n            if (result && result.success) {\n                console.log(\"\")\n                swal.fire({\n                    icon: 'success',\n                    title: \"Verification Email Sent!\",\n                    text: \"Enter the OTP to verify your Email\",\n                    type: \"Success\",\n                    confirmButtonText: \"OK\"\n                  });\n                console.log(\"success\");\n                RegisterStorage.email = this.state.email\n                RegisterStorage.username = this.state.username\n                this.props.history.push(\"/verifyemail\");\n\n            }\n\n            else if (result && result.success === false) {\n                console.log(\"registration failed \")\n                swal.fire({\n                    icon: 'error',\n                    title: 'Registration failed',\n                    text: 'Try Again',\n                    confirmButtonText: \"OK\"\n                });\n                this.props.history.push(\"/RegisterInfo\");\n            }\n        }\n        catch (e) {\n\n        }\n    }\n\n    render() {\n        \n        if(typeof web3 === 'undefined')\n        {\n            console.log(\"Metamask installed..\");\n        }\n        if(typeof web3 !== 'undefined')\n        {\n            console.log(\"Metamask is not installed..\");\n            swal.fire({\n                icon: 'success',\n                title: \"Verification Email Sent!\",\n                text: \"Enter the OTP to verify your Email\",\n                type: \"Success\",\n                confirmButtonText: \"OK\"\n              });\n        }\n        \n    }\n}\nexport default RegisterInfo;\n"]},"metadata":{},"sourceType":"module"}